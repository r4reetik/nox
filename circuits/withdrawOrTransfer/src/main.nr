global MAX_TREE_DEPTH: u32 = 32;

use helpers::{commitment::commitment_hasher, LeanIMTInclusionProof::lean_imt_inclusion_proof};

fn main(
    // Public inputs
    withdraw_value: pub Field,
    merkle_root: pub Field,
    existingNullifier: pub Field,
    // Private inputs
    leaf_index: Field,
    label: Field,
    existingValue: Field,
    existingSecret: Field,
    newNullifier: Field,
    newSecret: Field,
    siblings: [Field; MAX_TREE_DEPTH],
) -> pub Field {
    let existingCommitment =
        commitment_hasher(existingNullifier, existingValue, label, existingSecret);

    let computed_merkle_root = lean_imt_inclusion_proof(existingCommitment, leaf_index, siblings);
    println(computed_merkle_root);
    println(merkle_root);
    assert(computed_merkle_root == merkle_root);

    assert(withdraw_value.lt(existingValue) | withdraw_value.eq(existingValue));
    let newCommitment = commitment_hasher(
        newNullifier,
        existingValue - withdraw_value, // noir checks for underflows
        label,
        newSecret,
    );

    newCommitment
}

#[test]
pub fn test_main() {
    let withdraw_value: Field = (500000000000000000).into();
    let merkle_root: Field = 0x0de6f3accefd10fa9b4b051932b99164ed2a6c01b6e9b87c8780210106181625;
    let leaf_index: Field = 17;
    let existingNullifier: Field = 17;
    let label: Field = 0x4838B106FCe9647Bdf1E7877BF73cE8B0BAD5f97;
    let existingValue: Field = 1000000000000000000;
    let existingSecret: Field = 34;
    let newNullifier: Field = 601;
    let newSecret: Field = 602;
    let siblings: [Field; 32] = [
        0x284732750a4c687dc1a5bdfd27a7d130838eb261b3efda082634f03f1381f8d0,
        0x2f1992a8f3e396814096f43f8a39b43bab09f51c415928da0cca986759e30219,
        0x10aa998dfa4f051bfefb09d4cce0df6ca7176c33d3217dabf8c7a8628dedf414,
        0x0d2ce5ffec3b40e24e31f3cc77b4666855256bfc587b98620f0c9537e1fd7c98,
        0x1afc3e11aef5abc81eacdb715050bda392f8949b779c5dfde8a17b9b9a1f225b,
        0x2ba1a5a86b4ab6cb6fa65b4a9a467aa357215c3579a5440fb31f535578585d77,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
    ];
    let _newCommitment = main(
        withdraw_value,
        merkle_root,
        existingNullifier,
        leaf_index,
        label,
        existingValue,
        existingSecret,
        newNullifier,
        newSecret,
        siblings,
    );

    assert(_newCommitment == 0x21adcd4c0b79b79f4564706cce1f55dad4f3211aa1d4b533ada3f4b1edbd41d6);
}

#[test(should_fail)]
pub fn test_2() {
    let existingNullifier: Field = 25546;
    let existingSecret: Field = 684266;
    let existingValue: Field = 2000000000000000000;
    let label: Field = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;
    let leaf_index: Field = 7;
    let merkle_root: Field = 0x296e1e1723de379d27580f37e0b326d569a3650ab9c42ef5012716f955c91cb1;
    let newNullifier: Field = 744302;
    let newSecret: Field = 275103;
    let withdraw_value: Field = (6000000000000000000).into();
    let siblings: [Field; 32] = [
        0x058258da1abc94b10f0e7209fbb8a3ad1e9191c19dd9b0d5d1578740c889c89d,
        0x24564c30952be56d77eae1d68490afa2c4117d54c1e4ea0068ad9ad1ec30db86,
        0x24a6ead2b70f5bdcb928ae1d133bb435524cac77a693776e4e3c47c953f38020,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
        0x0000000000000000000000000000000000000000000000000000000000000000,
    ];
    let _newCommitment = main(
        withdraw_value,
        merkle_root,
        existingNullifier,
        leaf_index,
        label,
        existingValue,
        existingSecret,
        newNullifier,
        newSecret,
        siblings,
    );

    // assert(_newCommitment == 0x21adcd4c0b79b79f4564706cce1f55dad4f3211aa1d4b533ada3f4b1edbd41d6);
}
